.for_development:
  environment:
    name: development
  variables:
    DOCKER_IMAGE_TAG: latest
  only:
    - main

.for_release:
  environment:
    name: release

.build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_TAG} || true
      .
    - docker build
      --cache-from ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_TAG}
      --tag ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_TAG}
      --label org.label-schema.schema-version="1.0"
      --label org.label-schema.vcs-url="${CI_PROJECT_URL}.git"
      --label org.label-schema.vcs-ref="${CI_COMMIT_SHA}"
      . --build-arg PUBLIC_URL=${PUBLIC_URL}

    - docker push ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_TAG}

.prepare_release:
  extends: .build
  stage: build
  before_script:
    - DOCKER_IMAGE_TAG=${CI_COMMIT_TAG}

release:publish:
  extends:
    - .prepare_release
    - .for_release
  rules:
    - if: $BY_TRIGGER == 'true'

development:publish:
  extends:
    - .build
    - .for_development

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
    GIT_DEPTH: '0'
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -X
  allow_failure: true
  only:
    - main
